spring.application.name=Smart Contact Manager
server.port = 8081

#MySQL Database Configurations

    spring.datasource.url = jdbc:mysql://localhost:3306/scm
    spring.datasource.username = scm
    spring.datasource.password = scmscmscm

    # create database scm;
    # create user scm;
    # grant all privileges on scm.* to scm;

#jpa conigurations
    spring.jpa.show-sql = true
    #for creating schemas and tables
    spring.jpa.hibernate.ddl-auto = update
    spring.jpa.properties.hibermate.dialect = org.hibermate.dialect.MySQL5Dialect
    spring.jpa.properties.hibermate.format_sql = true


#Email Configurations

    # Spring Security Configurations(by default username is user and password is generated in console)
    # spring.security.user.name = abc
    # spring.security.user.password = abc

#OAuth2 Google Configurations (/oauth2/authorization/google : http://localhost:8081/login/oauth2/code/google)
    spring.security.oauth2.client.registration.google.client-name = Google
    spring.security.oauth2.client.registration.google.client-id = ${GoogleClient_ID}
    spring.security.oauth2.client.registration.google.client-secret = ${GoogleClient_Secret}
    spring.security.oauth2.client.registration.google.scope = profile,email
    # spring.security.oauth2.client.registration.google.redirect-uri = http://localhost:8081/login/oauth2/code/google
    # spring.security.oauth2.client.provider.google.authorization-uri = https://accounts.google.com/o/oauth2/auth
    # spring.security.oauth2.client.provider.google.token-uri = https://accounts.google.com/o/oauth2/token
    # spring.security.oauth2.client.provider.google.user-info-uri = https://www.googleapis.com/oauth2/v3/userinfo
    # spring.security.oauth2.client.provider.google.user-name-attribute = sub

#OAuth2 Github Configurations (/oauth2/authorization/github : http://localhost:8081/login/oauth2/code/github)
    spring.security.oauth2.client.registration.github.client-name = Github
    spring.security.oauth2.client.registration.github.client-id = ${GithubClient_ID}
    spring.security.oauth2.client.registration.github.client-secret = ${GithubClient_Secret}

# https://fontawesome.com/
# https://www.flaticon.com/

# file configs
    cloudinary.cloud_name = ${Cloudinary_CloudName}
    cloudinary.api_key = ${Cloudinary_APIKey}
    cloudinary.api_secret = ${Cloudinary_APISecret}
